version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: contextprovider-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - contextprovider-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: contextprovider-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - ANONYMIZED_TELEMETRY=False
      - CHROMA_TELEMETRY_IMPL=none
    volumes:
      - backend_uploads:/app/uploads
      - backend_chroma:/app/chroma_db
    depends_on:
      - chromadb
    networks:
      - contextprovider-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ChromaDB Service
  chromadb:
    image: chromadb/chroma:latest
    container_name: contextprovider-chromadb
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - ANONYMIZED_TELEMETRY=False
      - ALLOW_RESET=True
      - CHROMA_SERVER_NOFILE=65536
    networks:
      - contextprovider-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  chroma_data:
  backend_uploads:
  backend_chroma:

networks:
  contextprovider-network:
    driver: bridge 